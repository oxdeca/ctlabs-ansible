---

# ------------------------------------------------------------------------------
# File        : ctlabs-ansible/roles/ctlabs_jupyter/tasks/package.yml
# Description : Package installation tasks for the ctlabs_jupyter role
# ------------------------------------------------------------------------------

- name: ctlabs_jupyter.tasks.package.redhat.install
  when: os_family == 'redhat'
  dnf:
    name      : "{{ item.name }}"
    enablerepo: "{{ ctlabs_jupyter.defaults.repos[os_family] }}"
    state     : present
  loop: "{{ ctlabs_jupyter.defaults.pkgs.redhat }}"

- name: ctlabs_jupyter.tasks.package.debian.install
  when: os_family == 'debian'
  package:
    name      : "{{ item.name }}"
    state     : present
  loop: "{{ ctlabs_jupyter.defaults.pkgs.debian }}"

- name: ctlabs_jupyter.tasks.package.python.pips.install
  when: not os in ['kali2025']
  pip:
    name  : "{{ item }}"
  loop: "{{ ctlabs_jupyter.defaults.python.pips }}"

- name: ctlabs_jupyter.tasks.package.jupyter.link
  when: os_family in ['redhat']
  file:
    src  : "{{ ctlabs_jupyter.defaults.config.bin }}"
    dest : /usr/bin/jupyter
    state: link

# ansible module pipx isn't available on our installation yet.
# so we use command as workaround
#
- name: ctlabs_jupyter.tasks.package.python.pipx.install
  when: os in ['kali2025']
  command: "pipx install {{ item }} --global"
  loop: "{{ ctlabs_jupyter.defaults.python.pipx }}"

- name: ctlabs_jupyter.tasks.package.ruby.gems.install
  when: os_family in ['redhat']
  gem:
    name: "{{ item }}"
    user_install: false
  loop: "{{ ctlabs_jupyter.defaults.ruby.gems }}"

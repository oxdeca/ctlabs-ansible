---

# ------------------------------------------------------------------------------
# File        : ctlabs-ansible/roles/ctlabs_foreman/tasks/package.yml
# Description : packages
# ------------------------------------------------------------------------------

#
# RedHat
#
- name: ctlabs_foreman.tasks.package.redhat
  when: ctg_os_family == 'redhat'
  block:
    - name: ctlabs_foreman.tasks.package.redhat.pkg.install
      dnf:
        name : "{{ item.url if item.url is defined else item.name }}"
        disable_gpg_check: true
      loop     : "{{ ctlabs_foreman.defaults.pkgs[ctg_os_family] }}"
      register : result
      until    : result is success


- name: ctlabs_foreman.tasks.package.server.plugins
  when: ctlabs_foreman_role == 'server'
  vars:
    ansible_python_interpreter: /usr/sbin/ip vrf exec default /usr/bin/python3
  command: |
    {{ ctlabs_foreman.defaults.install.cmd }} --scenario foreman \
    --enable-foreman-plugin-ansible                              \
    --enable-foreman-plugin-discovery                            \
    --enable-foreman-plugin-openscap                             \
    --enable-foreman-plugin-remote-execution                     \
    --enable-foreman-plugin-webhooks                             \
    --enable-foreman-plugin-salt                                 \
    --enable-foreman-plugin-vault                                \
    --enable-foreman-plugin-netbox                               \
    --enable-foreman-plugin-leapp                                \
    --enable-foreman-cli-openscap
  register: output

#    --enable-foreman-proxy-plugin-openscap-puppet-module true \

- debug: "msg={{ output }}"


- name: ctlabs_foreman.tasks.package.proxy.plugins
  when: ctlabs_foreman_role in [ 'server', 'proxy' ]
  vars:
    ansible_python_interpreter: /usr/sbin/ip vrf exec default /usr/bin/python3
  command: |
    {{ ctlabs_foreman.defaults.install.cmd }} --scenario foreman \
    --enable-foreman-proxy-plugin-openscap                       \
    --enable-foreman-proxy-plugin-remote-execution-script
  register: output

- debug: "msg={{ output }}"
---

# ------------------------------------------------------------------------------
# File        : ctlabs-ansible/roles/ctlabs_vault/tasks/init.yml
# Description : initialize vault
# ------------------------------------------------------------------------------

- name: ctlabs_vault.tasks.init.init_status
  uri:
    url             : "{{ ctlabs_vault.defaults.config.init.url }}/sys/init"
    validate_certs  : false
  register: vault_init_status

- name: ctlabs_vault.tasks.init.init_status.fact
  set_fact:
    ctlabs_vault_initialized: "{{ vault_init_status.json.initialized }}"

- name: ctlabs_vault.tasks.init.initialize
  when: not ctlabs_vault_initialized
  uri:
    url             : "{{ ctlabs_vault.defaults.config.init.url }}/sys/init"
    method          : POST
    validate_certs  : false
    return_content  : true
    headers         : 
      Host: "{{ ansible_nodename }}"
    body_format     : json
    body            : >
      {
        "secret_shares"    : 1,
        "secret_threshold" : 1
      }
  register: vault_init_result

- name: ctlabs_vault.tasks.init.copy_init_result
  when: vault_init_result is defined
  copy:
    mode   : '0400'
    owner  : root
    content: |
      vault_root_token        : "{{ vault_init_result.json['root_token']     }}"
      vault_unseal_keys_b64   : "{{ vault_init_result.json['keys_base64'][0] }}"
      ctlabs_vault_initialized: true
    dest: "/root/ctlabs-ansible/.ctlabs_vault_init_output.yml"
  delegate_to: localhost

- name: ctlabs_vault.tasks.init.seal_status
  uri:
    url             : "{{ ctlabs_vault.defaults.config.init.url }}/sys/seal-status"
    validate_certs : false
  register: vault_seal_status

- name: ctlabs_vault.tasks.init.seal_status.fact
  set_fact:
    ctlabs_vault_sealed: "{{ vault_seal_status.json.sealed }}"

- name: ctlabs_vault.tasks.init.unseal
  when: ctlabs_vault_sealed
  uri:
    url             : "{{ ctlabs_vault.defaults.config.init.url }}/sys/unseal"
    method          : POST
    validate_certs  : false
    return_content  : true
    headers         : 
      Host: "{{ ansible_nodename }}"
    body_format     : json
    body            : >
      {
        "key" : "{{ vault_init_result.json['keys_base64'][0] }}"
      }
  register: vault_unseal_result

# - debug: "msg={{ vault_unseal_result }}"

#
# Enable Secrets Engines
#

- name: ctlabs_vault.tasks.init.secrets.userpass.enable
  uri:
    url             : "{{ ctlabs_vault.defaults.config.init.url }}/sys/auth/userpass"
    method         : POST
    validate_certs : false
    status_code    : 204
    headers        :
      X-Vault-Token: "{{ vault_init_result.json['root_token'] }}"
    body_format    : json
    body           : |
      {
        "type"        : "userpass",
        "description" : "User/Pass Authentication"
      }

- name: ctlabs_vault.tasks.init.secerts.userpass.add_user
  uri:
    url             : "{{ ctlabs_vault.defaults.config.init.url }}/auth/userpass/users/ctlabs"
    method         : POST
    validate_certs : false
    status_code    : 204
    headers        :
      X-Vault-Token: "{{ vault_init_result.json['root_token'] }}"
    body_format    : json
    body           : |
      {
        "password" : "secret123!",
        "policies" : "default,ctlabs"
      }

- name: ctlabs_vault.tasks.init.secrets.userpass.policy.ctlabs
  uri:
    url             : "{{ ctlabs_vault.defaults.config.init.url }}/sys/policies/acl/ctlabs"
    method         : POST
    validate_certs : false
    status_code    : 204
    headers        :
      X-Vault-Token: "{{ vault_init_result.json['root_token'] }}"
    body_format    : json
    body           : |
      {
        "policy" : "{{ lookup('template', 'ctlabs.hcl.j2') | regex_replace('\r?\n', '\\n') | regex_replace('"', '\\"') }}"
      }

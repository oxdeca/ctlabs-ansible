---

# ------------------------------------------------------------------------------
# File        : /etc/auditbeat/auditbeat.yml
# Template    : ctlabs_auditbeat/templates/auditbeat.yml.j2
# ------------------------------------------------------------------------------

#==========================  Modules configuration =============================
auditbeat.modules:

{% if dockerenv.stat.exists %}
- module: auditd
  # Load audit rules from separate files. Same format as audit.rules(7).
  audit_rule_files: [ '${path.config}/audit.rules.d/*.conf' ]
  audit_rules: |
    ## Define audit rules here.
    ## Create file watches (-w) or syscall audits (-a or -A). Uncomment these
    ## examples or add your own rules.

    ## If you are on a 64 bit platform, everything should be running
    ## in 64 bit mode. This rule will detect any use of the 32 bit syscalls
    ## because this might be a sign of someone exploiting a hole in the 32
    ## bit API.
    -a always,exit -F arch=b32 -S all -F key=32bit-abi

    ## Executions.
    # -a always,exit -F arch=b64 -S execve,execveat -k exec

    ## External access (warning: these can be expensive to audit).
    #-a always,exit -F arch=b64 -S accept,bind,connect -F key=external-access

    ## Identity changes.
    -w /etc/group -p wa -k identity
    -w /etc/passwd -p wa -k identity
    -w /etc/gshadow -p wa -k identity

    ## Unauthorized access attempts.
    -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -k access
    -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -k access
{% endif %}

- module: file_integrity
  paths:
  - /bin
  - /usr/bin
  - /sbin
  - /usr/sbin
  - /etc

- module: system
  datasets:
    - host    # General host information, e.g. uptime, IPs
    - login   # User logins, logouts, and system boots.
    - package # Installed, updated, and removed packages
    # - process # Started and stopped processes
    # - socket  # Opened and closed sockets
    - user    # User information

  # How often datasets send state updates with the
  # current state of the system (e.g. all currently
  # running processes, all open sockets).
  state.period: 12h

  # Enabled by default. Auditbeat will read password fields in
  # /etc/passwd and /etc/shadow and store a hash locally to
  # detect any changes.
  user.detect_password_changes: true

  # File patterns of the login record files.
  login.wtmp_file_pattern: /var/log/wtmp*
  login.btmp_file_pattern: /var/log/btmp*

#================================ Outputs =====================================

#----------------------------- Logstash output --------------------------------
output.logstash:
  # The Logstash hosts
  hosts: {{ ctlabs_auditbeat.defaults.config.logstash.hosts }}

  # List of root certificates for HTTPS server verifications
#  ssl.certificate_authorities: [" logstash_x509_ca "]

  # Certificate for SSL client authentication
#  ssl.certificate: " logstash_x509_crt "

  # Client Certificate Key
#  ssl.key: " logstash_x509_key "

#================================ Processors =====================================

# Configure processors to enhance or manipulate events generated by the beat.

#processors:
#- add_fields:
#    target: Environment
#    fields:
#      name: {# env_name #}
#- add_host_metadata:
#    netinfo.enabled: true
#    cache.ttl: 5m
#    geo:
#      name             : {# geo_name             #}
#      location         : {# geo_location         #}
#      continent_name   : {# geo_continent_name   #}
#      country_iso_code : {# geo_country_iso_code #}
#      region_name      : {# geo_region_name      #}
#      region_iso_code  : {# geo_region_iso_code  #}
#      city_name        : {# geo_city_name        #}


#==========================  Modules configuration =============================
auditbeat.modules:

{% if dockerenv.stat.exists %}
- module: auditd
  # Load audit rules from separate files. Same format as audit.rules(7).
  audit_rule_files: [ '${path.config}/audit.rules.d/*.conf' ]
  audit_rules: |
    ## Define audit rules here.
    ## Create file watches (-w) or syscall audits (-a or -A). Uncomment these
    ## examples or add your own rules.

    ## If you are on a 64 bit platform, everything should be running
    ## in 64 bit mode. This rule will detect any use of the 32 bit syscalls
    ## because this might be a sign of someone exploiting a hole in the 32
    ## bit API.
    -a always,exit -F arch=b32 -S all -F key=32bit-abi

    ## Executions.
    # -a always,exit -F arch=b64 -S execve,execveat -k exec

    ## External access (warning: these can be expensive to audit).
    #-a always,exit -F arch=b64 -S accept,bind,connect -F key=external-access

    ## Identity changes.
    -w /etc/group -p wa -k identity
    -w /etc/passwd -p wa -k identity
    -w /etc/gshadow -p wa -k identity

    ## Unauthorized access attempts.
    -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -k access
    -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -k access
{% endif %}

- module: file_integrity
  paths:
  - /bin
  - /usr/bin
  - /sbin
  - /usr/sbin
  - /etc

- module: system
  datasets:
    - host    # General host information, e.g. uptime, IPs
    - login   # User logins, logouts, and system boots.
    - package # Installed, updated, and removed packages
    # - process # Started and stopped processes
    # - socket  # Opened and closed sockets
    - user    # User information

  # How often datasets send state updates with the
  # current state of the system (e.g. all currently
  # running processes, all open sockets).
  state.period: 12h

  # Enabled by default. Auditbeat will read password fields in
  # /etc/passwd and /etc/shadow and store a hash locally to
  # detect any changes.
  user.detect_password_changes: true

  # File patterns of the login record files.
  login.wtmp_file_pattern: /var/log/wtmp*
  login.btmp_file_pattern: /var/log/btmp*

#================================ Outputs =====================================

#----------------------------- Logstash output --------------------------------
output.logstash:
  # The Logstash hosts
  hosts: {{ ctlabs_auditbeat.defaults.config.logstash.hosts }}

  # List of root certificates for HTTPS server verifications
#  ssl.certificate_authorities: [" logstash_x509_ca "]

  # Certificate for SSL client authentication
#  ssl.certificate: " logstash_x509_crt "

  # Client Certificate Key
#  ssl.key: " logstash_x509_key "

#================================ Processors =====================================

# Configure processors to enhance or manipulate events generated by the beat.

#processors:
#- add_fields:
#    target: Environment
#    fields:
#      name: {# env_name #}
#- add_host_metadata:
#    netinfo.enabled: true
#    cache.ttl: 5m
#    geo:
#      name             : {# geo_name             #}
#      location         : {# geo_location         #}
#      continent_name   : {# geo_continent_name   #}
#      country_iso_code : {# geo_country_iso_code #}
#      region_name      : {# geo_region_name      #}
#      region_iso_code  : {# geo_region_iso_code  #}
#      city_name        : {# geo_city_name        #}

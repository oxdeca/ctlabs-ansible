#!/bin/bash

# ------------------------------------------------------------------------------
# File        : ctlabs-ansible/roles/ctlabs_postgresql/files/backup.sh
# Description : create backup (db and files)
# ------------------------------------------------------------------------------


backup {
  # db
  # systemctl stop netbox netbox-rq
  # PGPASSWORD='{{ ctlabs_netbox.defaults.config.db.pass }}' pg_dump    -h{{ ctlabs_netbox.defaults.config.db.host }} -U{{ ctlabs_netbox.defaults.config.db.user }} -d{{ ctlabs_netbox.defaults.config.db.name }} -Fc > {{ ctlabs_netbox.defaults.backup.dir }}/{{ ctlabs_netbox.defaults.backup.dmpfile }}
  # systemctl start netbox netbox-rq
  
  # files
  # cd {{ ctlabs_netbox.defaults.install.app_dir }} && tar cvf {{ ctlabs_netbox.defaults.backup.dir }}/{{ ctlabs_netbox.defaults.backup.tarfile }} {{ ctlabs_netbox.defaults.backup.media_dirs | join(' ') }}
}

restore_db() {
  local dumpfile=${1:-''}

  if [ ! -e "${dumpfile}" ]; then
    printf "Dumpfile '${dumpfile}' not found!\n"
    printf "Aborting ...\n"
    exit 1
  fi

  systemctl stop netbox netbox-rq
   PGPASSWORD='{{ ctlabs_netbox.defaults.config.db.pgpass }}' psql -h{ ctlabs_netbox.defaults.config.db.host }} -Upostgres postgres < <(echo -en "drop database netbox; create database netbox; alter database netbox owner to netbox;")
   PGPASSWORD='{{ ctlabs_netbox.defaults.config.db.pgpass }}' pg_restore -h{ ctlabs_netbox.defaults.config.db.host }} -Unetbox -dnetbox -Fc   ${dumpfile}
  cd /opt/netbox/netbox && /opt/netbox/venv/bin/python ./manage.py migrate
  systemctl start netbox netbox-rq
}

restore_files() {
  local tarfile=${1:-''}

  if [ ! -e "${tarfile}" ]; then
    printf "Dumpfile '${tarfile}' not found!\n"
    printf "Aborting ...\n"
    exit 1
  fi

  #cd /opt/netbox/netbox/ && tar xvf ${tarfile}

}


case $1 in
  'backup')
    backup
    ;;

  'restore_db')
    restore_db $2
    ;;

  'restore_files')
    restore_files $2
    ;;
esac
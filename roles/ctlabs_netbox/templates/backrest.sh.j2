#!/bin/bash

# ------------------------------------------------------------------------------
# File        : ctlabs-ansible/roles/ctlabs_postgresql/files/backup.sh
# Description : create backup (db, config- and media-files)
# ------------------------------------------------------------------------------

# backup {
#   # db
#   # systemctl stop netbox netbox-rq
#   # PGPASSWORD='secret123!' pg_dump    -h192.168.50.5 -Unetbox -dnetbox -Fc > /backups/nbdb.dmp
#   # systemctl start netbox netbox-rq
# 
#   # files
#   # cd /opt/netbox/netbox && tar cvf /backups/nbmedia.tar media scripts reports
#   # cd /opt/netbox        && tar cvf /backups/nbreqs.tar local_requirements.txt gunicorn.py
#   # cd /opt/netbox        && tar cvf /backups/nbconf.tar configuration.py ldap_config.py
# }
# 
# restore {
#   # systemct stop netbox netbox-rq
#   # PGPASSWORD='secret123!' psql -h192.168.50.5 -Upostgres postgres < <(echo -en "drop database netbox; create database netbox; # alter database netbox owner to netbox;")
#   # PGPASSWORD='secret123!' pg_restore -h192.168.50.5 -Unetbox -dnetbox -Fc   /root/2024-09-11-01.netbox.dmp
#   # cd /opt/netbox/netbox && tar xvf /root/2024-09-10-01.netbox.files.tar
#   # . /opt/netbox/venv/bin/activate python3 ./manage.py migrate
#   # systemctl start netbox netbox-rq
# }
# 
# upgrade {
#   # cd /opt
#   # curl -LO https://github.com/netbox-community/netbox/archive/refs/tags/v4.0.11.tar.gz
#   # tar xvf v4.0.11.tar.gz
#   # ln -svfn /opt/netbox-4.0.11/ /opt/netbox
#   # cd /opt/netbox-3.7.8               && cp -a local_requirements.txt gunicorn.py /opt/netbox/
#   # cd /opt/netbox-3.7.8/netbox/netbox && cp -a configuration.py ldap_config.py    /opt/netbox/netbox/netbox/
#   # cd /opt/netbox-3.7.8/netbox        && cp -a media scripts reports              /opt/netbox/netbox/ 
#   # cd /opt/netbox                     && PYTHON=/usr/bin/python3.11 ./upgrade.sh
#   systemctl restart netbox netbox-rq
# }

backup() {
  local dumpfile=${1:-''}

  if [ -e "{{ ctlabs_netbox.defaults.backup.dir }}/${dumpfile}" ]; then
    printf "Dumpfile '${dumpfile}' already exists!\n"
    printf "Aborting ...\n"
    exit 1
  fi

  systemctl stop netbox netbox-rq
   PGPASSWORD='{{ ctlabs_netbox.defaults.config.db.pass }}' pg_dump -h{{ ctlabs_netbox.defaults.config.db.host }} -Upostgres -dnetbox -Fc > {{ ctlabs_netbox.defaults.backup.dir }}/${dumpfile}
  systemctl start netbox netbox-rq
}

backup_files() {
  local tarfile=${1:-''}

  if [ -e "{{ ctlabs_netbox.defaults.backup.dir }}/${tarfile}" ]; then
    printf "Tarfile '${tarfile}' already exists!\n"
    printf "Aborting ...\n"
    exit 1
  fi

  cd {{ ctlabs_netbox.defaults.install.app_dir }}
  tar czvpf {{ ctlabs_netbox.defaults.backup.dir }}/${tarfile} ./media ./scripts ./reports ./netbox/configuration.py ./netbox/ldap_config.py
  cd -
}


restore() {
  local dumpfile=${1:-''}

  if [ ! -e "${dumpfile}" ]; then
    printf "Dumpfile '${dumpfile}' not found!\n"
    printf "Aborting ...\n"
    exit 1
  fi

  systemctl stop netbox netbox-rq
  PGPASSWORD='{{ ctlabs_netbox.defaults.config.db.pgpass }}' psql       -h{{ ctlabs_netbox.defaults.config.db.host }} -Upostgres postgres < <(echo -en "drop database netbox; create database netbox; alter database netbox owner to netbox;")
  PGPASSWORD='{{ ctlabs_netbox.defaults.config.db.pgpass }}' pg_restore -h{{ ctlabs_netbox.defaults.config.db.host }} -Unetbox -dnetbox -Fc ${dumpfile}
  cd /opt/netbox/netbox && /opt/netbox/venv/bin/python ./manage.py migrate
  systemctl start netbox netbox-rq
}

restore_files() {
  local tarfile=${1:-''}

  if [ ! -e "${tarfile}" ]; then
    printf "Dumpfile '${tarfile}' not found!\n"
    printf "Aborting ...\n"
    exit 1
  fi

  #cd /opt/netbox/netbox/ && tar xvf ${tarfile}

}


case $1 in
  'backup')
    if [ "${2}" == "db" ]; then
      backup ${3}
    elif [ "${2}" == "files" ]; then
      backup_files ${3}
    fi
    ;;

  'restore')
    if [ "${2}" == "db" ]; then
      restore ${3}
    fi
    ;;
esac

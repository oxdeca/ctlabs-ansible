---

# ------------------------------------------------------------------------------
# File        : ctlabs-ansible/roles/ctlabs_k8s/tasks/config.yml
# Description : main configurations
# ------------------------------------------------------------------------------

- name: ctlabs_k8s.tasks.config.crictl.config
  template:
    src  : "{{ ctlabs_k8s.defaults.config.crictl.template }}"
    dest : "{{ ctlabs_k8s.defaults.config.crictl.file     }}"

- name: ctlabs_k8s.tasks.config.dirs
  file:
    path : "{{ item.value }}"
    state: directory
    mode : '0755'
  loop: "{{ ctlabs_k8s.defaults.config.dirs | dict2items }}"

- name: ctlabs_k8s.tasks.config.kubeadm
  template:
    src  : "{{ item.template }}"
    dest : "{{ ctlabs_k8s.defaults.config.dirs.main }}/{{ item.file }}"
    mode : '0600'
  loop: "{{ ctlabs_k8s.defaults.config.kubeadm }}"

- name: ctlabs_k8s.tasks.config.manifests
  template:
    src  : "{{ item.template }}"
    dest : "{{ ctlabs_k8s.defaults.config.dirs.manifests }}/{{item.file }}"
    mode : '0644'
  loop: "{{ ctlabs_k8s.defaults.config.manifests }}"

- name: ctlabs_k8s.tasks.config.components
  template:
    src  : "{{ item.template }}"
    dest : "{{ ctlabs_k8s.defaults.config.dirs.components }}/{{item.file }}"
    mode : '0644'
  loop: "{{ ctlabs_k8s.defaults.config.components }}"

- name: ctlabs_k8s.tasks.config.kubeadm-init
  command: "/usr/bin/kubeadm init --config /etc/kubernetes/kubeadm-init.yml --upload-certs"

#
# Calico
#
- name: ctlabs_k8s.tasks.config.calico.download
  get_url:
    url  : "{{ ctlabs_k8s.defaults.cluster.calico.url }}"
    dest : "{{ ctlabs_k8s.defaults.config.dirs.components }}/calico.yml"

- name: ctlabs_k8s.tasks.config.calico.install
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  command: "/usr/bin/kubectl create -f {{ ctlabs_k8s.defaults.config.dirs.components }}/calico.yml"

- name: ctlabs_k8s.tasks.config.calico.custom-resources
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  command: "/usr/bin/kubectl apply -f {{ ctlabs_k8s.defaults.config.dirs.components }}/custom-resources.yml"

#
# Approve Certs
#
- name: ctlabs_k8s.tasks.config.certs.list
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  command: "/usr/bin/kubectl get csr --field-selector spec.signerName=kubernetes.io/kubelet-serving -o name"
  register: certs

- name: ctlabs_k8s.tasks.config.certs.approve
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  command: "/usr/bin/kubectl certificate approve {{ item }}"
  loop: "{{ certs.stdout_lines }}"

#
# Longhorn
#
- name: ctlabs_k8s.tasks.config.longhorn.download
  get_url:
    url  : "{{ ctlabs_k8s.defaults.cluster.longhorn.url }}"
    dest : "{{ ctlabs_k8s.defaults.config.dirs.components }}/longhorn.yml"

- name: ctlabs_k8s.tasks.config.longhorn.install
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  command: "/usr/bin/kubectl apply -f {{ ctlabs_k8s.defaults.config.dirs.components }}/longhorn.yml"

#
# Ingress
#
- name: ctlabs_k8s.tasks.config.ingress.download
  get_url:
    url  : "{{ ctlabs_k8s.defaults.cluster.ingress.url }}"
    dest : "{{ ctlabs_k8s.defaults.config.dirs.components }}/ingress.yml"

- name: ctlabs_k8s.tasks.config.ingress.install
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  command: "/usr/bin/kubectl apply -f {{ ctlabs_k8s.defaults.config.dirs.components }}/ingress.yml"

---

# ------------------------------------------------------------------------------
# File        : ctlabs-ansible/roles/ctlabs_k8s/tasks/precheck.yml
# Description : tasks prechecks
# ------------------------------------------------------------------------------

- name: ctlabs_k8s.tasks.precheck
  block:
    - name: ctlabs_k8s.tasks.precheck.os.supported
      assert:
        that: ctg_os is in ctlabs_k8s.os
        fail_msg: "OS [{{ ctg_os }}] is not supported!"
    
    - name: ctlabs_k8s.tasks.precheck.virtype
      assert:
        that     : ctg_virtype is in ctlabs_k8s.virtype
        fail_msg : "Virtualization Type '{{ ctg_virtype }}' not supported!"
  rescue:
    - name: ctlabs_k8s.tasks.precheck.skip.unsupported
      meta: end_host

#
# Kernel
#
- name: ctlabs_k8s.tasks.precheck.kernel.modules.load
  modprobe:
    name: "{{ item }}"
    state: present
  loop: "{{ ctlabs_k8s.defaults.config.kernel.modules }}"

- name: ctlabs_k8s.tasks.precheck.kernel.modules.file
  copy:
    content: "{{ ctlabs_k8s.defaults.config.kernel.modules | join('\n') }}"
    dest   : "{{ ctlabs_k8s.defaults.config.kernel.modules_file }}"

- name: ctlabs_k8s.tasks.precheck.kernel.params
  template:
    src  : "{{ ctlabs_k8s.defaults.config.kernel.params.template }}"
    dest : "{{ ctlabs_k8s.defaults.config.kernel.params.file     }}"

- name: ctlabs_k8s.tasks.preckeck.kernel.params.reload
  command: "sysctl --system"

#
# system
#
- name: ctlabs_k8s.tasks.precheck.hosts
  blockinfile:
    path  : /etc/hosts
    block: |
      {{ ansible_default_ipv4.address }}  {{ ansible_nodename }}.local {{ ansible_nodename }} {{ ansible_nodename.split('.')[0] }} kubernetes
